import Utils from "../Utils/Utils";

const { ccclass, property } = cc._decorator;
export const BOARDSIZE: cc.Vec2 = cc.v2(5, 8);  //(col, row)
export const LINE_ANIM_SPEED: number = 800;
export const LINE_WIDTH: number = 100;

export class LineConfig {
    id: number = null;
    posArr: number[] = [];
    angleArr: number[] = [];
    divPosArr: number[] = [];
}

export const LINECONFIG = {
    //posArr[x] = [x0, x1, ..., xn]
    //x: line index
    //xi: item index in column i
    winLinesConfig: [
        [1, 1, 1, 1, 1],    //1
        [0, 0, 0, 0, 0],    //2
        [2, 2, 2, 2, 2],    //3
        [0, 1, 2, 1, 0],    //4
        [2, 1, 0, 1, 2],    //5
        [0, 0, 1, 0, 0],    //6
        [2, 2, 1, 2, 2],    //7
        [1, 0, 0, 0, 1],    //8
        [1, 2, 2, 2, 1],    //9
        [1, 0, 1, 0, 1],    //10
        [1, 2, 1, 2, 1],    //11
        [0, 1, 0, 1, 0],    //12
        [2, 1, 2, 1, 2],    //13
        [1, 1, 0, 1, 1],    //14
        [1, 1, 2, 1, 1],    //15
        [0, 1, 1, 1, 0],    //16
        [2, 1, 1, 1, 2],    //17
        [0, 1, 2, 2, 2],    //18
        [2, 1, 0, 0, 0],    //19
        [0, 2, 0, 2, 0],    //20
        [2, 0, 2, 0, 2],    //21
        [0, 2, 2, 2, 0],    //22
        [2, 0, 0, 0, 2],    //23
        [0, 0, 2, 0, 0],    //24
        [2, 2, 0, 2, 2],    //25
        [0, 0, 0, 1, 2],    //26
        [2, 2, 2, 1, 0],    //27
        [1, 2, 0, 2, 1],    //28
        [1, 0, 2, 0, 1],    //29
        [2, 0, 1, 0, 2],    //30
    ],
    posArr: [
        [1, 1, 1, 1, 1],    //1
        [0, 0, 0, 0, 0],    //2
        [2, 2, 2, 2, 2],    //3
        [0, 1, 2, 1, 0],    //4
        [2, 1, 0, 1, 2],    //5
        [0, 0, 1, 0, 0],    //6
        [2, 2, 1, 2, 2],    //7
        [1, 0, 0, 0, 1],    //8
        [1, 2, 2, 2, 1],    //9
        [1, 0, 1, 0, 1],    //10
        [1, 2, 1, 2, 1],    //11
        [0, 1, 0, 1, 0],    //12
        [2, 1, 2, 1, 2],    //13
        [1, 1, 0, 1, 1],    //14
        [1, 1, 2, 1, 1],    //15
        [0, 1, 1, 1, 0],    //16
        [2, 1, 1, 1, 2],    //17
        [0, 1, 2, 2, 2],    //18
        [2, 1, 0, 0, 0],    //19
        [0, 2, 0, 2, 0],    //20
        [2, 0, 2, 0, 2],    //21
        [0, 2, 2, 2, 0],    //22
        [2, 0, 0, 0, 2],    //23
        [0, 0, 2, 0, 0],    //24
        [2, 2, 0, 2, 2],    //25
        [0, 0, 0, 1, 2],    //26
        [2, 2, 2, 1, 0],    //27
        [1, 2, 0, 2, 1],    //28
        [1, 0, 2, 0, 1],    //29
        [2, 0, 1, 0, 2],    //30
    ],
    divNum: 11,
    //use LineController.calculateDivPosition() to calculate this matrix
    //use pre-calculated matrix to save workload
    lineDivPos: [
        [0, 0, 0, 0, 0],        //1
        [0, 0, 0, 0, 0],        //2
        [0, 0, 0, 0, 0],        //3
        [1, 1, 1, 1, 1],        //4
        [1, 2, 2, 2, 2],        //5
        [2, 2, 2, 2, 2],        //6
        [2, 2, 3, 4, 4],        //7
        [1, 1, 1, 1, 1],        //8
        [2, 3, 3, 3, 3],        //9
        [3, 3, 4, 4, 5],        //10
        [4, 4, 5, 6, 7],        //11
        [3, 3, 3, 3, 3],        //12
        [3, 4, 4, 5, 5],        //13
        [5, 5, 4, 4, 4],        //14
        [6, 6, 6, 6, 6],        //15
        [4, 7, 7, 7, 6],        //16
        [4, 8, 8, 8, 9],        //17
        [5, 9, 8, 8, 8],        //18
        [5, 10, 10, 10, 10],    //19
        [6, 6, 6, 10, 8],       //20
        [6, 6, 2, 3, 1],        //21
        [7, 5, 5, 5, 5],        //22
        [7, 5, 5, 5, 6],        //23
        [8, 8, 7, 7, 7],        //24
        [8, 8, 8, 7, 7],        //25
        [9, 9, 9, 9, 10],       //26
        [9, 9, 9, 10, 9],       //27
        [7, 7, 7, 9, 9],        //28
        [8, 7, 10, 8, 8],       //29
        [10, 10, 10, 9, 3],     //30
    ]
};